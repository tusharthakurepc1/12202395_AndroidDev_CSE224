package com.company.eapc

import android.os.Bundle
import android.view.MenuItem
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.ScrollState
import androidx.compose.foundation.horizontalScroll
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonColors
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.Card
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.compose.NavHost
import androidx.navigation.compose.composable
import androidx.navigation.compose.rememberNavController
import com.company.eapc.ui.theme.EAPCTheme
import java.util.Locale.Category



@Composable
fun LazyCompGrid() {
    LazyVerticalGrid(columns = GridCells.Adaptive(60.dp)){
        items (500){
            numbers->MyCard(number = numbers)
        }
    }
}



@Composable
fun menuGrid() {

    Column (
//        Modifier.verticalScroll(rememberScrollState()),

    ){
        repeat(10){
            Row(
                Modifier.fillMaxWidth(),
                horizontalArrangement = Arrangement.SpaceEvenly,

                ){
                repeat(2){
                    gridCell();
                }

            }
        }
    }

//    gridCell()
}


@Composable
fun gridCell() {

    Card (
        modifier = Modifier
            .padding(8.dp)
            .width(200.dp)
            .height(200.dp),

    ){

        Box(
            modifier = Modifier
                .fillMaxSize()
                .padding(10.dp),


            ){
            Image(painter = painterResource(id = R.drawable.upperpanelimage),
                contentDescription = "Greek Salad",
                modifier = Modifier
                    .fillMaxWidth()
                    .clip(RoundedCornerShape(10.dp)),
                )

            Text(text = "Greek Salad",
                fontSize = 25.sp,
                fontWeight = FontWeight.Bold,
                modifier = Modifier
                    .fillMaxHeight()
                    .align(Alignment.Center),
                color = Color.White,

            )

            Text(text = "$12.99",
                modifier = Modifier
                    .align(Alignment.BottomEnd)
                    .padding(bottom = 10.dp, end = 10.dp),
                color = Color.White,
                fontSize = 20.sp,

            )

        }
    }
}